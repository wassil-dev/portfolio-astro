---
import Layout from "../../layouts/Layout.astro";
import Navigation from "../../components/Navigation.astro";
import ReadingProgress from "../../components/ReadingProgress.astro";
import Footer from "../../components/Footer.astro";
import { Card, CardContent } from "@/components/ui/card";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

// Generate static paths for all blog posts
export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts
    .filter(post => !post.data.draft)
    .map(post => ({
      params: { slug: post.slug },
      props: { post },
    }));
}

const { post } = Astro.props as { post: CollectionEntry<"blog"> };
const { Content } = await post.render();

// Format date
const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(post.data.pubDate);

// Get related posts (same tags)
const allPosts = await getCollection("blog");
const relatedPosts = allPosts
  .filter(p =>
    !p.data.draft &&
    p.slug !== post.slug &&
    p.data.tags.some(tag => post.data.tags.includes(tag))
  )
  .slice(0, 3);
---

<Layout title={post.data.title} description={post.data.description}>
  <ReadingProgress />
  <Navigation />
  <main class="min-h-screen w-full overflow-x-hidden px-4 sm:px-6 md:px-8 pb-16">

    <!-- Breadcrumb Navigation -->
    <div class="w-full max-w-4xl mx-auto pt-8 pb-4">
      <nav class="flex items-center gap-2 text-sm text-muted-foreground">
        <a href="/" class="hover:text-foreground transition-colors">Home</a>
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
        <a href="/blog" class="hover:text-foreground transition-colors">Blog</a>
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
        <span class="text-foreground">{post.data.title}</span>
      </nav>
    </div>

    <!-- Article Header -->
    <article class="max-w-4xl mx-auto">
      <header class="mb-10 space-y-6">
        {/* Tags */}
        {post.data.tags.length > 0 && (
          <div class="flex flex-wrap gap-2">
            {post.data.tags.map((tag: string) => (
              <span class="bg-primary/10 text-primary border border-primary/20 px-4 py-1.5 rounded-full text-sm font-medium">
                {tag}
              </span>
            ))}
          </div>
        )}

        {/* Title */}
        <h1 class="text-4xl sm:text-5xl lg:text-6xl font-extrabold tracking-tight">
          {post.data.title}
        </h1>

        {/* Description */}
        <p class="text-xl text-muted-foreground leading-relaxed">
          {post.data.description}
        </p>

        {/* Meta Info */}
        <div class="flex flex-wrap items-center gap-6 text-sm text-muted-foreground border-t border-b border-border py-4">
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
            </svg>
            <span class="font-medium">{post.data.author}</span>
          </div>
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
            </svg>
            <time datetime={post.data.pubDate.toISOString()}>{formattedDate}</time>
          </div>
        </div>

        {/* Cover Image */}
        {post.data.cover && (
          <div class="aspect-video w-full overflow-hidden rounded-2xl shadow-2xl border border-border">
            <img src={post.data.cover} alt={post.data.title} class="w-full h-full object-cover"/>
          </div>
        )}
      </header>

      {/* Article Content */}
      <Card class="border-2 mb-12">
        <CardContent>
          <div class="prose prose-gray dark:prose-invert max-w-none pt-4">
            <Content />
          </div>
        </CardContent>
      </Card>

      {/* Back to Blog */}
      <div class="mb-12">
        <a href="/blog" class="inline-flex items-center gap-2 px-6 py-3 bg-secondary text-secondary-foreground rounded-lg hover:bg-secondary/80 transition-all font-medium border-2 border-border group">
          <svg class="w-4 h-4 group-hover:-translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Back to Blog
        </a>
      </div>

      {/* Related Posts */}
      {relatedPosts.length > 0 && (
        <section class="border-t border-border pt-12">
          <h2 class="text-3xl font-bold mb-8">Related Posts</h2>
          <div class="grid gap-6 grid-cols-1 md:grid-cols-3">
            {relatedPosts.map(related => (
              <a href={`/blog/${related.slug}`} class="block group">
                <Card class="border-2 hover:border-primary/50 hover:shadow-lg transition-all h-full">
                  <CardContent>
                    <h3 class="text-lg font-bold text-foreground group-hover:text-primary transition-colors mb-2 line-clamp-2">
                      {related.data.title}
                    </h3>
                    <p class="text-sm text-muted-foreground line-clamp-3 mb-4">
                      {related.data.description}
                    </p>
                    <div class="text-xs text-muted-foreground flex items-center gap-2">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                      {new Intl.DateTimeFormat('en-US', { month: 'short', day: 'numeric', year: 'numeric' }).format(related.data.pubDate)}
                    </div>
                  </CardContent>
                </Card>
              </a>
            ))}
          </div>
        </section>
      )}
    </article>
  </main>
  <Footer />
</Layout>

<style>
  html {
    scroll-behavior: smooth;
  }
</style>
