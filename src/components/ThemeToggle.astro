---
// Dark mode toggle component
---

<button
  id="theme-toggle"
  class="fixed top-20 right-4 z-50 p-2 rounded-lg bg-card border-2 border-border hover:border-primary/50 transition-all duration-300 shadow-lg md:top-4"
  aria-label="Toggle theme"
>
  <svg class="sun-icon w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
  </svg>
  <svg class="moon-icon w-6 h-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
  </svg>
</button>

<script>
  // Theme toggle logic
  const themeToggle = document.getElementById('theme-toggle');
  const sunIcon = themeToggle?.querySelector('.sun-icon');
  const moonIcon = themeToggle?.querySelector('.moon-icon');
  const html = document.documentElement;

  // Get initial theme from localStorage or system preference
  const getTheme = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  };

  // Set theme
  const setTheme = (theme: string) => {
    if (theme === 'dark') {
      html.classList.add('dark');
      sunIcon?.classList.add('hidden');
      moonIcon?.classList.remove('hidden');
    } else {
      html.classList.remove('dark');
      sunIcon?.classList.remove('hidden');
      moonIcon?.classList.add('hidden');
    }
    localStorage.setItem('theme', theme);
  };

  // Initialize theme
  setTheme(getTheme());

  // Toggle theme on button click
  themeToggle?.addEventListener('click', () => {
    const currentTheme = html.classList.contains('dark') ? 'dark' : 'light';
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    setTheme(newTheme);
  });

  // Listen for system theme changes
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
    if (!localStorage.getItem('theme')) {
      setTheme(e.matches ? 'dark' : 'light');
    }
  });
</script>
