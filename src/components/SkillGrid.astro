---
import * as icons from "simple-icons";
import type { SimpleIcon } from "simple-icons";

interface Skill {
  name: string;
  icon?: string;
  custom?: string;
}

interface Props {
  skills: Skill[];
}

const { skills } = Astro.props;
---

<ul class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4">
  {skills.map((skill: Skill) => {
    const iconData = skill.icon ? icons[skill.icon as keyof typeof icons] as SimpleIcon | undefined : null;
    return (
      <li class="group">
        <div class="flex flex-col items-center justify-center gap-3 p-6 bg-card border-2 border-border rounded-xl hover:border-primary/50 hover:shadow-lg hover:-translate-y-1 transition-all duration-300">
          {iconData && typeof iconData === 'object' && 'path' in iconData ? (
            <svg role="img" viewBox="0 0 24 24" width="48" height="48" fill={`#${iconData.hex}`} class="group-hover:scale-110 transition-transform duration-300">
              <title>{iconData.title}</title>
              <path d={iconData.path} />
            </svg>
          ) : skill.custom ? (
            <img src={skill.custom} alt={skill.name} width="48" height="48" class="group-hover:scale-110 transition-transform duration-300" />
          ) : null}
          <span class="text-sm font-medium text-center text-foreground">{skill.name}</span>
        </div>
      </li>
    );
  })}
</ul>
